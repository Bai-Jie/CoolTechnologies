apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "com.optimalorange.cooltechnologies"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // read local.properties
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newReader('UTF-8'))
    // set string resources according to local.properties
    try {
        addStringResSetInProperties('youku_client_id', localProperties, 'youku.clientId')
        addStringResSetInProperties('youku_client_secret', localProperties, 'youku.clientSecret')
        addStringResSetInProperties('umeng_app_key', localProperties, 'umeng.appKey')
    } catch (ResourceException re) {
        String message = "Please set $re.propertyName in local.properties file at root project"
        throw new ResourceException(re.propertyName, message, re)
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:21.0.2'
    compile 'com.android.support:cardview-v7:21.0.2'
    compile 'com.android.support:recyclerview-v7:21.0.2'
    compile 'com.android.support:support-v13:21.0.2'
    compile 'com.viewpagerindicator:library:2.4.1'
    compile 'com.mcxiaoke.volley:library:1.0.9@aar'
    compile 'com.etsy.android.grid:library:1.0.5'
    compile 'cpr.name.videoenabledwebview:library:1.0'
    compile 'com.umeng.update:library:2.4.2'
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 代码质量检查 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// 摘（窃取:）自 http://blogs.burnsidedigital.com/2014/06/code-quality-and-testing-with-gradle-in-android-projects/?utm_source=tuicool
apply plugin: 'checkstyle'

check.dependsOn 'checkstyle'
task checkstyle(type: Checkstyle) {
//    ignoreFailures = true    // 如果想暂时忽略code style问题，让本行代码生效
    configFile new File(rootDir, "config/checkstyle/checkstyle.xml")

    source 'src'
    include '**/*.java'
    include '**/*.xml'
//    exclude '**/packageName/**', '**/utils/MyFile.java'
    classpath = files()
}

apply plugin: 'pmd'

check.dependsOn 'pmd'
task pmd(type: Pmd) {
//    ignoreFailures = true

    ruleSets = ["java-basic", "java-braces", "java-android"]

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
    }
}



// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 工具类和方法 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 * 把properties里设置的propertyName属性的值，添加为Android项目的string resource：R.string.${name}
 * @param name Android项目string resource的name
 */
void addStringResSetInProperties(String name, Properties properties, String propertyName) {
    final String value = properties.getProperty(propertyName)
    if (value == null) {
        throw new ResourceException(propertyName)
    }
    android.applicationVariants.all { variant ->
        variant.resValue('string', name, value)
    }
}

class ResourceException extends org.gradle.api.resources.ResourceException {
    final String propertyName;

    ResourceException(String propertyName) {
        this.propertyName = propertyName
    }

    ResourceException(String propertyName, String message) {
        super(message)
        this.propertyName = propertyName
    }

    ResourceException(String propertyName, String message, Throwable cause) {
        super(message, cause)
        this.propertyName = propertyName
    }
}
